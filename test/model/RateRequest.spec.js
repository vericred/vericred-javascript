/**
 * Vericred API
 * Vericred's API allows you to search for Health Plans that a specific doctor
accepts.

## Getting Started

Visit our [Developer Portal](https://developers.vericred.com) to
create an account.

Once you have created an account, you can create one Application for
Production and another for our Sandbox (select the appropriate Plan when
you create the Application).

## SDKs

Our API follows standard REST conventions, so you can use any HTTP client
to integrate with us. You will likely find it easier to use one of our
[autogenerated SDKs](https://github.com/vericred/?query=vericred-),
which we make available for several common programming languages.

## Authentication

To authenticate, pass the API Key you created in the Developer Portal as
a `Vericred-Api-Key` header.

`curl -H 'Vericred-Api-Key: YOUR_KEY' "https://api.vericred.com/providers?search_term=Foo&zip_code=11215"`

## Versioning

Vericred's API default to the latest version.  However, if you need a specific
version, you can request it with an `Accept-Version` header.

The current version is `v3`.  Previous versions are `v1` and `v2`.

`curl -H 'Vericred-Api-Key: YOUR_KEY' -H 'Accept-Version: v2' "https://api.vericred.com/providers?search_term=Foo&zip_code=11215"`

## Pagination

Endpoints that accept `page` and `per_page` parameters are paginated. They expose
four additional fields that contain data about your position in the response,
namely `Total`, `Per-Page`, `Link`, and `Page` as described in [RFC-5988](https://tools.ietf.org/html/rfc5988).

For example, to display 5 results per page and view the second page of a
`GET` to `/networks`, your final request would be `GET /networks?....page=2&per_page=5`.

## Sideloading

When we return multiple levels of an object graph (e.g. `Provider`s and their `State`s
we sideload the associated data.  In this example, we would provide an Array of
`State`s and a `state_id` for each provider.  This is done primarily to reduce the
payload size since many of the `Provider`s will share a `State`

```
{
  providers: [{ id: 1, state_id: 1}, { id: 2, state_id: 1 }],
  states: [{ id: 1, code: 'NY' }]
}
```

If you need the second level of the object graph, you can just match the
corresponding id.

## Selecting specific data

All endpoints allow you to specify which fields you would like to return.
This allows you to limit the response to contain only the data you need.

For example, let's take a request that returns the following JSON by default

```
{
  provider: {
    id: 1,
    name: 'John',
    phone: '1234567890',
    field_we_dont_care_about: 'value_we_dont_care_about'
  },
  states: [{
    id: 1,
    name: 'New York',
    code: 'NY',
    field_we_dont_care_about: 'value_we_dont_care_about'
  }]
}
```

To limit our results to only return the fields we care about, we specify the
`select` query string parameter for the corresponding fields in the JSON
document.

In this case, we want to select `name` and `phone` from the `provider` key,
so we would add the parameters `select=provider.name,provider.phone`.
We also want the `name` and `code` from the `states` key, so we would
add the parameters `select=states.name,states.code`.  The id field of
each document is always returned whether or not it is requested.

Our final request would be `GET /providers/12345?select=provider.name,provider.phone,states.name,states.code`

The response would be

```
{
  provider: {
    id: 1,
    name: 'John',
    phone: '1234567890'
  },
  states: [{
    id: 1,
    name: 'New York',
    code: 'NY'
  }]
}
```

## Benefits summary format
Benefit cost-share strings are formatted to capture:
 * Network tiers
 * Compound or conditional cost-share
 * Limits on the cost-share
 * Benefit-specific maximum out-of-pocket costs

**Example #1**
As an example, we would represent [this Summary of Benefits &amp; Coverage](https://s3.amazonaws.com/vericred-data/SBC/2017/33602TX0780032.pdf) as:

* **Hospital stay facility fees**:
  - Network Provider: `$400 copay/admit plus 20% coinsurance`
  - Out-of-Network Provider: `$1,500 copay/admit plus 50% coinsurance`
  - Vericred's format for this benefit: `In-Network: $400 before deductible then 20% after deductible / Out-of-Network: $1,500 before deductible then 50% after deductible`

* **Rehabilitation services:**
  - Network Provider: `20% coinsurance`
  - Out-of-Network Provider: `50% coinsurance`
  - Limitations & Exceptions: `35 visit maximum per benefit period combined with Chiropractic care.`
  - Vericred's format for this benefit: `In-Network: 20% after deductible / Out-of-Network: 50% after deductible | limit: 35 visit(s) per Benefit Period`

**Example #2**
In [this other Summary of Benefits &amp; Coverage](https://s3.amazonaws.com/vericred-data/SBC/2017/40733CA0110568.pdf), the **specialty_drugs** cost-share has a maximum out-of-pocket for in-network pharmacies.
* **Specialty drugs:**
  - Network Provider: `40% coinsurance up to a $500 maximum for up to a 30 day supply`
  - Out-of-Network Provider `Not covered`
  - Vericred's format for this benefit: `In-Network: 40% after deductible, up to $500 per script / Out-of-Network: 100%`

**BNF**

Here's a description of the benefits summary string, represented as a context-free grammar:

```
root                      ::= coverage

coverage                  ::= (simple_coverage | tiered_coverage) (space pipe space coverage_modifier)?
tiered_coverage           ::= tier (space slash space tier)*
tier                      ::= tier_name colon space (tier_coverage | not_applicable)
tier_coverage             ::= simple_coverage (space (then | or | and) space simple_coverage)* tier_limitation?
simple_coverage           ::= (pre_coverage_limitation space)? coverage_amount (space post_coverage_limitation)? (comma? space coverage_condition)?
coverage_modifier         ::= limit_condition colon space (((simple_coverage | simple_limitation) (semicolon space see_carrier_documentation)?) | see_carrier_documentation | waived_if_admitted | shared_across_tiers)
waived_if_admitted        ::= ("copay" space)? "waived if admitted"
simple_limitation         ::= pre_coverage_limitation space "copay applies"
tier_name                 ::= "In-Network-Tier-2" | "Out-of-Network" | "In-Network"
limit_condition           ::= "limit" | "condition"
tier_limitation           ::= comma space "up to" space (currency | (integer space time_unit plural?)) (space post_coverage_limitation)?
coverage_amount           ::= currency | unlimited | included | unknown | percentage | (digits space (treatment_unit | time_unit) plural?)
pre_coverage_limitation   ::= first space digits space time_unit plural?
post_coverage_limitation  ::= (((then space currency) | "per condition") space)? "per" space (treatment_unit | (integer space time_unit) | time_unit) plural?
coverage_condition        ::= ("before deductible" | "after deductible" | "penalty" | allowance | "in-state" | "out-of-state") (space allowance)?
allowance                 ::= upto_allowance | after_allowance
upto_allowance            ::= "up to" space (currency space)? "allowance"
after_allowance           ::= "after" space (currency space)? "allowance"
see_carrier_documentation ::= "see carrier documentation for more information"
shared_across_tiers       ::= "shared across all tiers"
unknown                   ::= "unknown"
unlimited                 ::= /[uU]nlimited/
included                  ::= /[iI]ncluded in [mM]edical/
time_unit                 ::= /[hH]our/ | (((/[cC]alendar/ | /[cC]ontract/) space)? /[yY]ear/) | /[mM]onth/ | /[dD]ay/ | /[wW]eek/ | /[vV]isit/ | /[lL]ifetime/ | ((((/[bB]enefit/ plural?) | /[eE]ligibility/) space)? /[pP]eriod/)
treatment_unit            ::= /[pP]erson/ | /[gG]roup/ | /[cC]ondition/ | /[sS]cript/ | /[vV]isit/ | /[eE]xam/ | /[iI]tem/ | /[sS]tay/ | /[tT]reatment/ | /[aA]dmission/ | /[eE]pisode/
comma                     ::= ","
colon                     ::= ":"
semicolon                 ::= ";"
pipe                      ::= "|"
slash                     ::= "/"
plural                    ::= "(s)" | "s"
then                      ::= "then" | ("," space) | space
or                        ::= "or"
and                       ::= "and"
not_applicable            ::= "Not Applicable" | "N/A" | "NA"
first                     ::= "first"
currency                  ::= "$" number
percentage                ::= number "%"
number                    ::= float | integer
float                     ::= digits "." digits
integer                   ::= /[0-9]/+ (comma_int | under_int)*
comma_int                 ::= ("," /[0-9]/*3) !"_"
under_int                 ::= ("_" /[0-9]/*3) !","
digits                    ::= /[0-9]/+ ("_" /[0-9]/+)*
space                     ::= /[ \t]/+
```


 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.vericredClient);
  }
}(this, function(expect, vericredClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new vericredClient.RateRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RateRequest', function() {
    it('should create an instance of RateRequest', function() {
      // uncomment below and update the code to test RateRequest
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be.a(vericredClient.RateRequest);
    });

    it('should have the property externalId (base name: "external_id")', function() {
      // uncomment below and update the code to test the property externalId
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property effectiveDate (base name: "effective_date")', function() {
      // uncomment below and update the code to test the property effectiveDate
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property expirationDate (base name: "expiration_date")', function() {
      // uncomment below and update the code to test the property expirationDate
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property ratingAreaNaturalKey (base name: "rating_area_natural_key")', function() {
      // uncomment below and update the code to test the property ratingAreaNaturalKey
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age0 (base name: "age_0")', function() {
      // uncomment below and update the code to test the property age0
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age0Tobacco (base name: "age_0_tobacco")', function() {
      // uncomment below and update the code to test the property age0Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age1 (base name: "age_1")', function() {
      // uncomment below and update the code to test the property age1
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age1Tobacco (base name: "age_1_tobacco")', function() {
      // uncomment below and update the code to test the property age1Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age2 (base name: "age_2")', function() {
      // uncomment below and update the code to test the property age2
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age2Tobacco (base name: "age_2_tobacco")', function() {
      // uncomment below and update the code to test the property age2Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age3 (base name: "age_3")', function() {
      // uncomment below and update the code to test the property age3
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age3Tobacco (base name: "age_3_tobacco")', function() {
      // uncomment below and update the code to test the property age3Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age4 (base name: "age_4")', function() {
      // uncomment below and update the code to test the property age4
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age4Tobacco (base name: "age_4_tobacco")', function() {
      // uncomment below and update the code to test the property age4Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age5 (base name: "age_5")', function() {
      // uncomment below and update the code to test the property age5
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age5Tobacco (base name: "age_5_tobacco")', function() {
      // uncomment below and update the code to test the property age5Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age6 (base name: "age_6")', function() {
      // uncomment below and update the code to test the property age6
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age6Tobacco (base name: "age_6_tobacco")', function() {
      // uncomment below and update the code to test the property age6Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age7 (base name: "age_7")', function() {
      // uncomment below and update the code to test the property age7
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age7Tobacco (base name: "age_7_tobacco")', function() {
      // uncomment below and update the code to test the property age7Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age8 (base name: "age_8")', function() {
      // uncomment below and update the code to test the property age8
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age8Tobacco (base name: "age_8_tobacco")', function() {
      // uncomment below and update the code to test the property age8Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age9 (base name: "age_9")', function() {
      // uncomment below and update the code to test the property age9
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age9Tobacco (base name: "age_9_tobacco")', function() {
      // uncomment below and update the code to test the property age9Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age10 (base name: "age_10")', function() {
      // uncomment below and update the code to test the property age10
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age10Tobacco (base name: "age_10_tobacco")', function() {
      // uncomment below and update the code to test the property age10Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age11 (base name: "age_11")', function() {
      // uncomment below and update the code to test the property age11
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age11Tobacco (base name: "age_11_tobacco")', function() {
      // uncomment below and update the code to test the property age11Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age12 (base name: "age_12")', function() {
      // uncomment below and update the code to test the property age12
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age12Tobacco (base name: "age_12_tobacco")', function() {
      // uncomment below and update the code to test the property age12Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age13 (base name: "age_13")', function() {
      // uncomment below and update the code to test the property age13
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age13Tobacco (base name: "age_13_tobacco")', function() {
      // uncomment below and update the code to test the property age13Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age14 (base name: "age_14")', function() {
      // uncomment below and update the code to test the property age14
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age14Tobacco (base name: "age_14_tobacco")', function() {
      // uncomment below and update the code to test the property age14Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age15 (base name: "age_15")', function() {
      // uncomment below and update the code to test the property age15
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age15Tobacco (base name: "age_15_tobacco")', function() {
      // uncomment below and update the code to test the property age15Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age16 (base name: "age_16")', function() {
      // uncomment below and update the code to test the property age16
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age16Tobacco (base name: "age_16_tobacco")', function() {
      // uncomment below and update the code to test the property age16Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age17 (base name: "age_17")', function() {
      // uncomment below and update the code to test the property age17
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age17Tobacco (base name: "age_17_tobacco")', function() {
      // uncomment below and update the code to test the property age17Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age18 (base name: "age_18")', function() {
      // uncomment below and update the code to test the property age18
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age18Tobacco (base name: "age_18_tobacco")', function() {
      // uncomment below and update the code to test the property age18Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age19 (base name: "age_19")', function() {
      // uncomment below and update the code to test the property age19
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age19Tobacco (base name: "age_19_tobacco")', function() {
      // uncomment below and update the code to test the property age19Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age20 (base name: "age_20")', function() {
      // uncomment below and update the code to test the property age20
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age20Tobacco (base name: "age_20_tobacco")', function() {
      // uncomment below and update the code to test the property age20Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age21 (base name: "age_21")', function() {
      // uncomment below and update the code to test the property age21
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age21Tobacco (base name: "age_21_tobacco")', function() {
      // uncomment below and update the code to test the property age21Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age22 (base name: "age_22")', function() {
      // uncomment below and update the code to test the property age22
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age22Tobacco (base name: "age_22_tobacco")', function() {
      // uncomment below and update the code to test the property age22Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age23 (base name: "age_23")', function() {
      // uncomment below and update the code to test the property age23
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age23Tobacco (base name: "age_23_tobacco")', function() {
      // uncomment below and update the code to test the property age23Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age24 (base name: "age_24")', function() {
      // uncomment below and update the code to test the property age24
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age24Tobacco (base name: "age_24_tobacco")', function() {
      // uncomment below and update the code to test the property age24Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age25 (base name: "age_25")', function() {
      // uncomment below and update the code to test the property age25
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age25Tobacco (base name: "age_25_tobacco")', function() {
      // uncomment below and update the code to test the property age25Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age26 (base name: "age_26")', function() {
      // uncomment below and update the code to test the property age26
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age26Tobacco (base name: "age_26_tobacco")', function() {
      // uncomment below and update the code to test the property age26Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age27 (base name: "age_27")', function() {
      // uncomment below and update the code to test the property age27
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age27Tobacco (base name: "age_27_tobacco")', function() {
      // uncomment below and update the code to test the property age27Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age28 (base name: "age_28")', function() {
      // uncomment below and update the code to test the property age28
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age28Tobacco (base name: "age_28_tobacco")', function() {
      // uncomment below and update the code to test the property age28Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age29 (base name: "age_29")', function() {
      // uncomment below and update the code to test the property age29
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age29Tobacco (base name: "age_29_tobacco")', function() {
      // uncomment below and update the code to test the property age29Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age30 (base name: "age_30")', function() {
      // uncomment below and update the code to test the property age30
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age30Tobacco (base name: "age_30_tobacco")', function() {
      // uncomment below and update the code to test the property age30Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age31 (base name: "age_31")', function() {
      // uncomment below and update the code to test the property age31
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age31Tobacco (base name: "age_31_tobacco")', function() {
      // uncomment below and update the code to test the property age31Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age32 (base name: "age_32")', function() {
      // uncomment below and update the code to test the property age32
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age32Tobacco (base name: "age_32_tobacco")', function() {
      // uncomment below and update the code to test the property age32Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age33 (base name: "age_33")', function() {
      // uncomment below and update the code to test the property age33
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age33Tobacco (base name: "age_33_tobacco")', function() {
      // uncomment below and update the code to test the property age33Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age34 (base name: "age_34")', function() {
      // uncomment below and update the code to test the property age34
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age34Tobacco (base name: "age_34_tobacco")', function() {
      // uncomment below and update the code to test the property age34Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age35 (base name: "age_35")', function() {
      // uncomment below and update the code to test the property age35
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age35Tobacco (base name: "age_35_tobacco")', function() {
      // uncomment below and update the code to test the property age35Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age36 (base name: "age_36")', function() {
      // uncomment below and update the code to test the property age36
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age36Tobacco (base name: "age_36_tobacco")', function() {
      // uncomment below and update the code to test the property age36Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age37 (base name: "age_37")', function() {
      // uncomment below and update the code to test the property age37
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age37Tobacco (base name: "age_37_tobacco")', function() {
      // uncomment below and update the code to test the property age37Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age38 (base name: "age_38")', function() {
      // uncomment below and update the code to test the property age38
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age38Tobacco (base name: "age_38_tobacco")', function() {
      // uncomment below and update the code to test the property age38Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age39 (base name: "age_39")', function() {
      // uncomment below and update the code to test the property age39
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age39Tobacco (base name: "age_39_tobacco")', function() {
      // uncomment below and update the code to test the property age39Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age40 (base name: "age_40")', function() {
      // uncomment below and update the code to test the property age40
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age40Tobacco (base name: "age_40_tobacco")', function() {
      // uncomment below and update the code to test the property age40Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age41 (base name: "age_41")', function() {
      // uncomment below and update the code to test the property age41
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age41Tobacco (base name: "age_41_tobacco")', function() {
      // uncomment below and update the code to test the property age41Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age42 (base name: "age_42")', function() {
      // uncomment below and update the code to test the property age42
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age42Tobacco (base name: "age_42_tobacco")', function() {
      // uncomment below and update the code to test the property age42Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age43 (base name: "age_43")', function() {
      // uncomment below and update the code to test the property age43
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age43Tobacco (base name: "age_43_tobacco")', function() {
      // uncomment below and update the code to test the property age43Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age44 (base name: "age_44")', function() {
      // uncomment below and update the code to test the property age44
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age44Tobacco (base name: "age_44_tobacco")', function() {
      // uncomment below and update the code to test the property age44Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age45 (base name: "age_45")', function() {
      // uncomment below and update the code to test the property age45
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age45Tobacco (base name: "age_45_tobacco")', function() {
      // uncomment below and update the code to test the property age45Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age46 (base name: "age_46")', function() {
      // uncomment below and update the code to test the property age46
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age46Tobacco (base name: "age_46_tobacco")', function() {
      // uncomment below and update the code to test the property age46Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age47 (base name: "age_47")', function() {
      // uncomment below and update the code to test the property age47
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age47Tobacco (base name: "age_47_tobacco")', function() {
      // uncomment below and update the code to test the property age47Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age48 (base name: "age_48")', function() {
      // uncomment below and update the code to test the property age48
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age48Tobacco (base name: "age_48_tobacco")', function() {
      // uncomment below and update the code to test the property age48Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age49 (base name: "age_49")', function() {
      // uncomment below and update the code to test the property age49
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age49Tobacco (base name: "age_49_tobacco")', function() {
      // uncomment below and update the code to test the property age49Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age50 (base name: "age_50")', function() {
      // uncomment below and update the code to test the property age50
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age50Tobacco (base name: "age_50_tobacco")', function() {
      // uncomment below and update the code to test the property age50Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age51 (base name: "age_51")', function() {
      // uncomment below and update the code to test the property age51
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age51Tobacco (base name: "age_51_tobacco")', function() {
      // uncomment below and update the code to test the property age51Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age52 (base name: "age_52")', function() {
      // uncomment below and update the code to test the property age52
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age52Tobacco (base name: "age_52_tobacco")', function() {
      // uncomment below and update the code to test the property age52Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age53 (base name: "age_53")', function() {
      // uncomment below and update the code to test the property age53
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age53Tobacco (base name: "age_53_tobacco")', function() {
      // uncomment below and update the code to test the property age53Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age54 (base name: "age_54")', function() {
      // uncomment below and update the code to test the property age54
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age54Tobacco (base name: "age_54_tobacco")', function() {
      // uncomment below and update the code to test the property age54Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age55 (base name: "age_55")', function() {
      // uncomment below and update the code to test the property age55
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age55Tobacco (base name: "age_55_tobacco")', function() {
      // uncomment below and update the code to test the property age55Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age56 (base name: "age_56")', function() {
      // uncomment below and update the code to test the property age56
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age56Tobacco (base name: "age_56_tobacco")', function() {
      // uncomment below and update the code to test the property age56Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age57 (base name: "age_57")', function() {
      // uncomment below and update the code to test the property age57
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age57Tobacco (base name: "age_57_tobacco")', function() {
      // uncomment below and update the code to test the property age57Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age58 (base name: "age_58")', function() {
      // uncomment below and update the code to test the property age58
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age58Tobacco (base name: "age_58_tobacco")', function() {
      // uncomment below and update the code to test the property age58Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age59 (base name: "age_59")', function() {
      // uncomment below and update the code to test the property age59
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age59Tobacco (base name: "age_59_tobacco")', function() {
      // uncomment below and update the code to test the property age59Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age60 (base name: "age_60")', function() {
      // uncomment below and update the code to test the property age60
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age60Tobacco (base name: "age_60_tobacco")', function() {
      // uncomment below and update the code to test the property age60Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age61 (base name: "age_61")', function() {
      // uncomment below and update the code to test the property age61
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age61Tobacco (base name: "age_61_tobacco")', function() {
      // uncomment below and update the code to test the property age61Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age62 (base name: "age_62")', function() {
      // uncomment below and update the code to test the property age62
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age62Tobacco (base name: "age_62_tobacco")', function() {
      // uncomment below and update the code to test the property age62Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age63 (base name: "age_63")', function() {
      // uncomment below and update the code to test the property age63
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age63Tobacco (base name: "age_63_tobacco")', function() {
      // uncomment below and update the code to test the property age63Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age64 (base name: "age_64")', function() {
      // uncomment below and update the code to test the property age64
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age64Tobacco (base name: "age_64_tobacco")', function() {
      // uncomment below and update the code to test the property age64Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age65 (base name: "age_65")', function() {
      // uncomment below and update the code to test the property age65
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

    it('should have the property age65Tobacco (base name: "age_65_tobacco")', function() {
      // uncomment below and update the code to test the property age65Tobacco
      //var instane = new vericredClient.RateRequest();
      //expect(instance).to.be();
    });

  });

}));
